{"version":3,"sources":["tabset/tabset.ts"],"names":[],"mappings":";;;;;;;;;OAAO,EACL,SAAS,EACT,KAAK,EACL,eAAe,EACf,SAAS,EACT,SAAS,EACT,WAAW,EACX,YAAY,EAEZ,MAAM,EACN,YAAY,EACb,MAAM,eAAe;AAEtB,IAAI,MAAM,GAAG,CAAC,CAAC;AAEf;;GAEG;AAEH;IACE,YAAmB,WAA6B;QAA7B,gBAAW,GAAX,WAAW,CAAkB;IAAG,CAAC;AACtD,CAAC;AAHD;IAAC,SAAS,CAAC,EAAC,QAAQ,EAAE,uBAAuB,EAAC,CAAC;;eAAA;AAK/C;;GAEG;AAEH;IACE,YAAmB,WAA6B;QAA7B,gBAAW,GAAX,WAAW,CAAkB;IAAG,CAAC;AACtD,CAAC;AAHD;IAAC,SAAS,CAAC,EAAC,QAAQ,EAAE,yBAAyB,EAAC,CAAC;;iBAAA;AAKjD;;GAEG;AAEH;IAAA;QACE;;WAEG;QACM,OAAE,GAAW,WAAW,MAAM,EAAE,EAAE,CAAC;QAK5C;;WAEG;QACM,aAAQ,GAAG,KAAK,CAAC;IAI5B,CAAC;AAAD,CAAC;AAZC;IAAC,KAAK,EAAE;;kCAAA;AAIR;IAAC,KAAK,EAAE;;qCAAA;AAIR;IAAC,KAAK,EAAE;;wCAAA;AAER;IAAC,YAAY,CAAC,aAAa,CAAC;;0CAAA;AAC5B;IAAC,YAAY,CAAC,WAAW,CAAC;;wCAAA;AAhB5B;IAAC,SAAS,CAAC,EAAC,QAAQ,EAAE,SAAS,EAAC,CAAC;;UAAA;AA4BjC;;GAEG;AAsBH;IAAA;QAQE;;WAEG;QACM,SAAI,GAAG,MAAM,CAAC;QAEvB;;;;WAIG;QACO,WAAM,GAAG,IAAI,YAAY,EAAqB,CAAC;IA8B3D,CAAC;IA5BC;;;OAGG;IACH,MAAM,CAAC,MAAc;QACnB,IAAI,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAC3C,EAAE,CAAC,CAAC,WAAW,IAAI,CAAC,WAAW,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7E,IAAI,gBAAgB,GAAG,KAAK,CAAC;YAE7B,IAAI,CAAC,MAAM,CAAC,IAAI,CACZ,EAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,MAAM,EAAE,WAAW,CAAC,EAAE,EAAE,cAAc,EAAE,QAAQ,gBAAgB,GAAG,IAAI,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC;YAE3G,EAAE,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,EAAE,CAAC;YACjC,CAAC;QACH,CAAC;IACH,CAAC;IAED,qBAAqB;QACnB,sEAAsE;QACtE,IAAI,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAChD,IAAI,CAAC,QAAQ,GAAG,SAAS,GAAG,SAAS,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC;IAC5F,CAAC;IAEO,WAAW,CAAC,EAAU;QAC5B,IAAI,UAAU,GAAa,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QAClE,MAAM,CAAC,UAAU,CAAC,MAAM,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAClD,CAAC;AACH,CAAC;AA/CC;IAAC,eAAe,CAAC,MAAM,CAAC;;uCAAA;AAKxB;IAAC,KAAK,EAAE;;2CAAA;AAKR;IAAC,KAAK,EAAE;;uCAAA;AAOR;IAAC,MAAM,EAAE;;yCAAA;AAvCX;IAAC,SAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,QAAQ,EAAE,WAAW;QACrB,QAAQ,EAAE;;;;;;;;;;;;;;;;GAgBT;KACF,CAAC;;aAAA;AAmDF,OAAO,MAAM,qBAAqB,GAAG,CAAC,SAAS,EAAE,MAAM,EAAE,aAAa,EAAE,WAAW,CAAC,CAAC","file":"tabset/tabset.js","sourcesContent":["import {\n  Component,\n  Input,\n  ContentChildren,\n  QueryList,\n  Directive,\n  TemplateRef,\n  ContentChild,\n  AfterContentChecked,\n  Output,\n  EventEmitter\n} from '@angular/core';\n\nlet nextId = 0;\n\n/**\n * This directive should be used to wrap tab titles that need to contain HTML markup or other directives.\n */\n@Directive({selector: 'template[ngbTabTitle]'})\nexport class NgbTabTitle {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * This directive must be used to wrap content to be displayed in a tab.\n */\n@Directive({selector: 'template[ngbTabContent]'})\nexport class NgbTabContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive representing an individual tab.\n */\n@Directive({selector: 'ngb-tab'})\nexport class NgbTab {\n  /**\n   * Unique tab identifier. Must be unique for the entire document for proper accessibility support.\n   */\n  @Input() id: string = `ngb-tab-${nextId++}`;\n  /**\n   * Simple (string only) title. Use the \"NgbTabTitle\" directive for more complex use-cases.\n   */\n  @Input() title: string;\n  /**\n   * Allows toggling disabled state of a given state. Disabled tabs can't be selected.\n   */\n  @Input() disabled = false;\n\n  @ContentChild(NgbTabContent) contentTpl: NgbTabContent;\n  @ContentChild(NgbTabTitle) titleTpl: NgbTabTitle;\n}\n\n/**\n * The payload of the tab change event\n */\nexport interface NgbTabChangeEvent {\n  activeId: string;\n  nextId: string;\n  preventDefault();\n}\n\n/**\n * A component that makes it easy to create tabbed interface.\n */\n@Component({\n  selector: 'ngb-tabset',\n  exportAs: 'ngbTabset',\n  template: `\n    <ul [class]=\"'nav nav-' + type\" role=\"tablist\">\n      <li class=\"nav-item\" *ngFor=\"let tab of tabs\">\n        <a [id]=\"tab.id\" class=\"nav-link\" [class.active]=\"tab.id === activeId\" [class.disabled]=\"tab.disabled\" \n          href (click)=\"!!select(tab.id)\">\n          {{tab.title}}<template [ngTemplateOutlet]=\"tab.titleTpl?.templateRef\"></template>\n        </a>\n      </li>\n    </ul>\n    <div class=\"tab-content\">\n      <template ngFor let-tab [ngForOf]=\"tabs\">\n        <div class=\"tab-pane active\" *ngIf=\"tab.id === activeId\" role=\"tabpanel\" [attr.aria-labelledby]=\"tab.id\">\n          <template [ngTemplateOutlet]=\"tab.contentTpl.templateRef\"></template>\n        </div>\n      </template>\n    </div>\n  `\n})\nexport class NgbTabset implements AfterContentChecked {\n  @ContentChildren(NgbTab) tabs: QueryList<NgbTab>;\n\n  /**\n   * An identifier of a tab that should be selected (active).\n   */\n  @Input() activeId: string;\n\n  /**\n   * Type of navigation to be used for tabs. Can be one of 'tabs' or 'pills'.\n   */\n  @Input() type = 'tabs';\n\n  /**\n   * A tab change event fired right before the tab selection happens.  The event object has three properties:\n   * 'activeId', the id of the currently active tab, 'nextId' the id of the newly selected tab, and a function,\n   * 'preventDefault()' which, when executed, will prevent the tab change from occurring.\n   */\n  @Output() change = new EventEmitter<NgbTabChangeEvent>();\n\n  /**\n   * Selects the given tab and shows its associated pane.\n   * Any other tab that was previously selected becomes unselected and its associated pane is hidden.\n   */\n  select(tabIdx: string) {\n    let selectedTab = this._getTabById(tabIdx);\n    if (selectedTab && !selectedTab.disabled && this.activeId !== selectedTab.id) {\n      let defaultPrevented = false;\n\n      this.change.emit(\n          {activeId: this.activeId, nextId: selectedTab.id, preventDefault: () => { defaultPrevented = true; }});\n\n      if (!defaultPrevented) {\n        this.activeId = selectedTab.id;\n      }\n    }\n  }\n\n  ngAfterContentChecked() {\n    // auto-correct activeId that might have been set incorrectly as input\n    let activeTab = this._getTabById(this.activeId);\n    this.activeId = activeTab ? activeTab.id : (this.tabs.length ? this.tabs.first.id : null);\n  }\n\n  private _getTabById(id: string): NgbTab {\n    let tabsWithId: NgbTab[] = this.tabs.filter(tab => tab.id === id);\n    return tabsWithId.length ? tabsWithId[0] : null;\n  }\n}\n\nexport const NGB_TABSET_DIRECTIVES = [NgbTabset, NgbTab, NgbTabContent, NgbTabTitle];\n"],"sourceRoot":"/source/"}