{"version":3,"sources":["modal/modal_window.ts"],"names":[],"mappings":";;;;;;;;;OAAO,EACL,SAAS,EACT,MAAM,EACN,YAAY,EACZ,KAAK,EACL,YAAY,EACb,MAAM,eAAe;OAEf,EAAC,mBAAmB,EAAC,MAAM,yBAAyB;AAa3D;IAAA;QACW,aAAQ,GAAG,IAAI,CAAC;QAChB,aAAQ,GAAG,IAAI,CAAC;QAGR,eAAU,GAAG,IAAI,YAAY,EAAE,CAAC;QAC9B,iBAAY,GAAG,IAAI,YAAY,EAAE,CAAC;IAqBvD,CAAC;IAlBC,aAAa;QACX,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,cAAc,CAAC,CAAC;QACnD,CAAC;IACH,CAAC;IAGD,MAAM;QACJ,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;QACxC,CAAC;IACH,CAAC;IAED,KAAK,CAAC,MAAM,IAAU,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAErD,OAAO,CAAC,MAAM,IAAU,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAEzD,eAAe,CAAC,MAAkB,IAAU,MAAM,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;AACzE,CAAC;AA1BC;IAAC,KAAK,EAAE;;gDAAA;AACR;IAAC,KAAK,EAAE;;gDAAA;AACR;IAAC,KAAK,EAAE;;4CAAA;AAER;IAAC,MAAM,CAAC,OAAO,CAAC;;kDAAA;AAChB;IAAC,MAAM,CAAC,SAAS,CAAC;;oDAAA;AAElB;IAAC,YAAY,CAAC,OAAO,CAAC;;;;mDAAA;AAOtB;IAAC,YAAY,CAAC,WAAW,CAAC;;;;4CAAA;AA1B5B;IAAC,SAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,IAAI,EAAE,EAAC,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,iBAAiB,EAAC;QACxF,QAAQ,EAAE;;;;;;KAMP;KACJ,CAAC;;kBAAA;AA4BD","file":"modal/modal_window.js","sourcesContent":["import {\n  Component,\n  Output,\n  EventEmitter,\n  Input,\n  HostListener,\n} from '@angular/core';\n\nimport {ModalDismissReasons} from './modal_dismiss_reasons';\n\n@Component({\n  selector: 'ngb-modal-window',\n  host: {'class': 'modal', 'role': 'dialog', 'tabindex': '-1', 'style': 'display: block;'},\n  template: `\n        <div [class]=\"'modal-dialog' + (size ? ' modal-' + size : '')\">\n            <div class=\"modal-content\" (click)=\"stopPropagation($event)\">\n                <ng-content></ng-content>\n            </div>\n        </div>\n    `\n})\nexport class NgbModalWindow {\n  @Input() backdrop = true;\n  @Input() keyboard = true;\n  @Input() size: string;\n\n  @Output('close') closeEvent = new EventEmitter();\n  @Output('dismiss') dismissEvent = new EventEmitter();\n\n  @HostListener('click')\n  backdropClick(): void {\n    if (this.backdrop) {\n      this.dismiss(ModalDismissReasons.BACKDROP_CLICK);\n    }\n  }\n\n  @HostListener('keyup.esc')\n  escKey(): void {\n    if (this.keyboard) {\n      this.dismiss(ModalDismissReasons.ESC);\n    }\n  }\n\n  close(result): void { this.closeEvent.emit(result); }\n\n  dismiss(reason): void { this.dismissEvent.emit(reason); }\n\n  stopPropagation($event: MouseEvent): void { $event.stopPropagation(); }\n}\n"],"sourceRoot":"/source/"}